#!/usr/bin/env ruby

require 'engineyard'
require 'trollop'

SUB_COMMANDS = %w(deploy status ssh environments)
$global_opts = Trollop::options do
  version "mt 0.0.2 (c) TheMelt"
  banner <<-EOS
Usage:
 mt COMMAND [ARGS]
 Commands:
  mt deploy -e <environment> -a <application> -m (run migrations)
  mt status -e <environment> -a <application>
  mt ssh -e <environment> -a <application> -n <instance>
EOS
  
  banner "Melttool for deploying to melt environments"
  stop_on SUB_COMMANDS
end

cmd = ARGV.shift
cmd_opts = case cmd
  when "ssh" # parse ssh opts
    Trollop::options do
      opt :app, "Which appliction, e.g. mobile or web", :short => "-a", :type => :string
      opt :env, "rails env, e.g. preview", :short => "-e", :type => :string
      opt :instance, "instance, e.g web1", :short => "-n", :type => :string
    end
  when "status" # parse status opts
    Trollop::options do
      opt :app, "Which appliction, e.g. mobile or web", :short => "-a", :type => :string
      opt :env, "rails env, e.g. preview", :short => "-e", :type => :string
    end    
  when "deploy"
    Trollop::options do
      opt :app, "Which appliction, e.g. gild", :short => "-a", :type => :string
      opt :env, "rails env, e.g. staging", :short => "-e", :type => :string
      opt :migrate, "run migrations", :short => "-m"
      opt :branch, "Choose a git branch", :short => "-r", :default => 'master'
    end
  when "environments"
  else
    Trollop::die "Unkown command #{cmd.inspect}"
  end

# Trollop debug
=begin
puts "Global Options: #{$global_opts.inspect}"
puts "Subcommand: #{cmd.inspect}"
puts "Subcommand options: #{cmd_opts.inspect}"
puts "Remaining arguments: #{ARGV.inspect}"
=end

def translate_env(env)
  ey_env = case env
    when "production"
      "themelt_web_prod"
    when "beta", "staging"
      "themelt_web_staging"
    when "preview"
      "themelt_web_staging2"
    when "preview2"
      "themelt_web_staging3"
    else
      Trollop::die "Unknown environment #{env}"
    end
    ey_env
end

def translate_app(env, app)
  ey_app = case app
    when "web", "desktop"
      env == 'production' ? "themelt_mobile" : "themelt_web_staging"
    when "mobile"
      env == 'production' ? "themelt_web" : "themelt_mobile_staging"
    else
      Trollop::die "Unknown application #{app}"
    end
end

def is_ey(app)
  app == 'ma' ? false : true
end

MA_HOSTS = {'production' => {'web1' => '10.86.49.67', 'web2' => '10.86.49.68', 'db' => '10.86.48.64'}, 'staging' => {'web' => '10.86.50.65', 'db' => '10.86.50.66'}}

def ma_ssh(env, instance)
  ma_host = MA_HOSTS[env][instance]
  Trollop::die "invalid instance '#{instance}' for '#{env}'" if ma_host.nil?
  puts "ssh #{ma_host}"
#  system "ssh #{ma_host}"
end 

def ma_status
  Trollop::die "not implemented"
end

def ma_deploy
  Trollop::die "not implemented"
end

def ey_ssh(env)
  system "ey ssh -e #{translate_env(env)}"
end

def ey_status(env, app) 
  system "ey status -e #{translate_env(env)} -a #{translate_app(env, app)}"
end

def ey_deploy(env, app, branch, migrate)
  cmd = "ey deploy -e #{translate_env(env)} -a #{translate_app(env, app)} -r #{branch}"
  cmd += " -m" if migrate == true
  if env == 'production'
    puts "About to deploy to branch #{branch} to production. Are you sure? (y/n)"
    c = gets.chomp.downcase
    unless c == "y"
      puts "exiting w/o deploying"
      return
    end
  end
  system cmd 
end

    
case cmd
when "-h"
  
when "ssh"
  is_ey(cmd_opts.app) ? ey_ssh(cmd_opts.env) : ma_ssh(cmd_opts.env, cmd_opts.instance)
when "status"
  is_ey(cmd_opts.app) ? ey_status(cmd_opts.env, cmd_opts.app) : ma_status
when "deploy"
  is_ey(cmd_opts.app) ? ey_deploy(cmd_opts.env, cmd_opts.app, cmd_opts.branch, cmd_opts.migrate) : ma_deploy
when "environment"
  puts "TheMelt (production)"
  puts "  Web: http://themelt.com"
  puts "  Mobile: http://m.themelt.com"
  puts ""
  puts "TheMelt (staging|beta)"
  puts "  Web: http://beta.themelt.com"
  puts "  Mobile: http://betamob.themelt.com"
  puts ""
  puts "TheMelt (preview)"
  puts "  Web: http://preview.themelt.com"
  puts "  Mobile: http://previewmob.themelt.com"
  puts ""
  puts "TheMelt (preview2)"
  puts "  Web: http://preview2.themelt.com"
  puts "  Mobile: http://previewmob2.themelt.com"
  puts "Munchaway services (production)"
  puts "  http://admin.fishsixrc.com"
  puts "Munchaway services (staging)"
  puts "  http://betadmin.fishsixrc.com"
end